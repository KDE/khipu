<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE kfl>
<kfl version="1.0">
	<function>
		<name>Hipotrocoide</name>
		<lambda>vector{(-2*cos(t))+(2*cos(((5/7)-1)*t)),(-2*sin(t))-(2*sin(((5/7)-1)*t))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Hoja de Trebol</name>
		<lambda>(((x^2)+(y^2))*((y^2)+(x*(x+2))))-(4*2*x*(y^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Involuta del Circulo</name>
		<lambda>vector{1*((cos(t))+(t*sin(t))),1*((sin(t))-(t*cos(t)))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Folium Simple</name>
		<lambda>4*2*(cos(q)^3)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Folium Simple</name>
		<lambda>vector{((4*2)/((1+(t^2))^2)),(t*((4*2)/((1+(t^2))^2)))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Hiperbola</name>
		<lambda>((x^2)/4)-((y^2)/4)-1</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Hiperbola</name>
		<lambda>vector{(4*sec(t)),(4*tan(t))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Hiperbola cubica</name>
		<lambda>(x*(y^2))-1</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Hiperbola cubica</name>
		<lambda>(x*(y^2))-1-(x^2)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Hiperbola cubica</name>
		<lambda>(x*(y^2))-1-x</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Hiperbola cubica</name>
		<lambda>(x*(y^2))-((1+x)^2)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Hiperbola cubica</name>
		<lambda>(x*(y^2))-((x+1)*((2*x)+1))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Kampyla de Eudoxo</name>
		<lambda>vector{(1*(1/(cos(t)))),(1*((sin(t)))/(cos(t)^2))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Lazo de Cusquita</name>
		<lambda>(x^4)+(y^4)-(4*x*y)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Lemniscata de Bernoulli</name>
		<lambda>(((x^2)+(y^2))^2)-(2*4*((x^2)-(y^2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Lemniscata de Bernoulli</name>
		<lambda>vector{(pi*cos(t))/(sin(t)^2+1),((pi*sin(t))*cos(t))/(sin(t)^2+1)}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Lemniscata de Booth</name>
		<lambda>(((x^2)+(y^2))^2)+(((2*4)+20)*(x^2))+(((2*4)-20)*(y^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Lemniscata de Sluse</name>
		<lambda>(x^4)-((2^2)*(x^2))+(1*(y^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Lemniscata de Gerono</name>
		<lambda>(x^4)-((2^2)*((x^2)-(y^2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Lemniscata de Gerono</name>
		<lambda>vector{(2*sin(t)),(2*(sin(t))*(cos(t)))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Lemniscata de Gerono</name>
		<lambda>vector{(2*sin(t)),(2*(sin(t))*(cos(t)))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Lemniscata de MontFerrier</name>
		<lambda>(1*(y^2))-((x^2)*(1-(x^2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Lemniscata de MontFerrier</name>
		<lambda>vector{(1*cos(t)),((1/2)*sin(2*t))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Lemniscata Hiperbolica</name>
		<lambda>(((x^2)+(y^2))^2)-(((1.5^2)*(x^2))-((0.1^2)*(y^2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Lemniscata Hiperbolica</name>
		<lambda>((x^2)*ln((1^2)/(x^2)))-(y^2)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Lemniscata Logaritmica</name>
		<lambda>((x^2)*ln(1/(x^2)))-(y^2)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Limacon de Pascal (Caracol de Pascal)</name>
		<lambda>(((x^2)+(y^2))-(2*4*x))^2-((2^2)*((x^2)+(y^2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Limacon de Pascal (Caracol de Pascal)</name>
		<lambda>2+(2*4*(cos(q)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Limacon de Pascal (Caracol de Pascal)</name>
		<lambda>vector{((1-(t^2))*(2+(2*4)+((2-(4*2))*(t^2))))/((1+(t^2))^2),((2*t)*(2+(2*4)+((2-(2*4))*(t^2))))/((1+(t^2))^2)}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Lituus (Cuernos de Caza)</name>
		<lambda>root(5/q,2)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Mediatriz de Clairaut</name>
		<lambda>(y^4)-(1*((x^2)-(y^2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Nefroide</name>
		<lambda>(((x^2)+(y^2)-(4*4))^3)-(108*(4^4)*(y^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Nefroide</name>
		<lambda>root((4^(2/3))*(((cos(q/2))^(2/3))+((sin(q/2))^(2/3))),(2/3))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Nefroide</name>
		<lambda>vector{4*((3*cos(t))-(cos(3*t))),4*((3*sin(t))-(sin(3*t)))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Nefroide de Freeth</name>
		<lambda>2*(1+(2*sin(q/2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Nefroide de Freeth</name>
		<lambda>(((x^2)+(y^2))*(((x^2)+(y^2)-4)^2))-(4*4*(((x^2)+(y^2)-(2*x))^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Orejas de Conejo</name>
		<lambda>(4*(((x^2)*((x^2)+(y^2)))-((3+1)*(x^2)*y)))+(((3-1)^2)*(y^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Ortoconcoide</name>
		<lambda>(((y^2)+(0.25*y)-(1.50^2))^2)-((x^2)*((1.5^2)-(y^2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Ovalos Cartesianos</name>
		<lambda>((((1-(2^2))*((x^2)+(y^2)))-(2*(2^2)*3*x)+(4^2)-(4*9))^2)-(4*16*((x^2)+(y^2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Ovalos de Cassini</name>
		<lambda>((((x-4)^2)+(y^2))*(((x+2)^2)+(y^2)))-(4^4)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Estrofoide Recta</name>
		<lambda>(x*((x^2)+(y^2)))+(1*((x^2)-(y^2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Estrofoide Recta</name>
		<lambda>-1*cos(2q)/cos(q)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Estrofoide Recta</name>
		<lambda>vector{2*((t^2)-1)/((t^2)+1),2*t*((t^2)-1)/((t^2)+1)}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Folium de Descartes</name>
		<lambda>(x^3)+(y^3)-(3*(2*x*y))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Folium de Descartes</name>
		<lambda>(3*(2*(sin(q))*(cos(q))))/((((sin(q))^3))+((cos(q))^3))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Folium de Descartes</name>
		<lambda>vector{(3*(2t))/(1+(t^3)),(3*((2*(t^2))))/(1+(t^3))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Folium de Durero</name>
		<lambda>vector{(2/2)*(cos(t)+cos(3t)),(2/2)*(sin(t)+sin(3t))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Folium Parabólico de Longchamps</name>
		<lambda>(x^3)-(2*((x^2)-(y^2)))-(x*y)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Folium Parabólico de Longchamps</name>
		<lambda>vector{(((t)-(t^2)+(4))/(2)),(((t)*((t)-(t^2)+(4)))/(2^2))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Folium parabólico oblicuo</name>
		<lambda>(x^3)-(0.5*((x^2)-(y^2)))-(2*x*y)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Folium parabólico oblicuo</name>
		<lambda>(1+(tan(q)*(2-(1*tan(q)))))/(cos(q))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Folium parabólico oblicuo</name>
		<lambda>vector{(1-t^2+2*t),(t*(1-t^2)+2*t^2)}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Folium parabolico recto</name>
		<lambda>vector{(1*(1-(t^2))),(1*t*(1-(t^2)))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Folium Simple</name>
		<lambda>(((x^2)+(y^2))^2)-(4*2*(x^3))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Alforja</name>
		<lambda>vector{(2*root(2,2)*cos(t)),(((-1)*((root(2,2))*(sin((2*t)+((5*pi)/4)))))+1)}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Alforja</name>
		<lambda>((((x^2)-y)^2)+(((y)^2)-((x)^2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Anacampis</name>
		<lambda>(x^3)-(x)-(4*y)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Anaclástica</name>
		<lambda>((x^2)*(y^2))+((y^2)*((1+y)^2))-((1/4)*(((x^2)*(y^2))+((1+y)^2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Anguinea</name>
		<lambda>vector{(2*(tan(t/2))),(sin(t))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Antiversiera</name>
		<lambda>(x^4)-(4*(x^3))+(16*(y^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Antiversiera</name>
		<lambda>(1/4)*(root(((4-x)*(x^3)),2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>
	<function>
		<name>Apiena</name>
		<lambda>((y^2)*((x-1)^2))-(2*y)+(1)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Araneida o Arácnida</name>
		<lambda>2*((sin(3*q))/(sin(4*q)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Astroide</name>
		<lambda>((x^2)+(y^2)-1)+(27*(x^2)*(y^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Astroide</name>
		<lambda>vector{((cos(t)^3)),((sin(t))^3)}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Astroide</name>
		<lambda>vector{((cos(t/4)^3)),((sin(t/4))^3)}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Astroide oblicua</name>
		<lambda>vector{((1/((sin(30))^2))*(cos(t))*((sin(t-30))^2)),((1/((sin(30))^2))*(cos(t-30))*((sin(t))^2))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Atriftaloide</name>
		<lambda>root((((((2*(x^2))-((9/10)^3))/(x))-(x^2))),2)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>
	<function>
		<name>Bicircular</name>
		<lambda>(((x^2)+(y^2))^2)+(2*(x+y)*((x^2)+(y^2)))+(x^2)+(2*x*y)+(3*(y^3))+(4*x)+(5*y)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Bicornia</name>
		<lambda>((y^2)*((4)-(x^2)))-(((x^2)+(4*y)-(4))^2)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Bicornia</name>
		<lambda>vector{(2*cos(t)),((2*((sin(t))^2))/(2+sin(t)))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Bifolium de Longchamps o bifolium oblicuo</name>
		<lambda>(((x^2)+(y^2))^2)-(((2*x)+(10*y))*(x^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Bifolium de Longchamps</name>
		<lambda>vector{((2+(10*t))/((1+(t^2))^2)),((t*(2+(10*t)))/((1+(t^2))^2))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Bifolium recto, o doble folium</name>
		<lambda>(((x^2)+(y^2))^2)-(8*x*(y^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Bifolium recto, o doble folium</name>
		<lambda>(((x^2)+(y^2))^2)+(8*x*(y^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Bifolium recto, o doble folium</name>
		<lambda>8*(cos(q))*((sin(q))^2)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Bifolium recto, o doble folium</name>
		<lambda>-8*(cos(q))*((sin(q))^2)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Braquistócrona</name>
		<lambda>(arcsin((2-(2*x))/(2)))-(root(((2*x)-(x^2)),2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>
	<function>
		<name>Bruja de Agnesi</name>
		<lambda>vector{(2*t),(2/(1+(t^2)))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Bruja de Agnesi</name>
		<lambda>(y*((x^2)+(4)))-(8)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Bruja de Agnesi</name>
		<lambda>(y*((x^2)+(16)))-(64)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Bruja de Agnesi</name>
		<lambda>(y*((x^2)+(9)))-(18)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Bruja de Agnesi</name>
		<lambda>vector{(4*tan(t)),(4*cos(t))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Cabeza de bala</name>
		<lambda>(4*(y^2))-(9*(x^2))-((x^2)*(y^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Cabeza de bala</name>
		<lambda>vector{(2*cos(t)),(3*cot(t))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Capricornoide</name>
		<lambda>((9*(x^2))*((x^2)+(y^2)))-(4*(((3*y)-(x^2)-(y^2))^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Capricornoide</name>
		<lambda>((6*(sin(q)))/(2+(3*cos(q))))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Asíntota de Capricornoide</name>
		<lambda>(((root(5,2))/(2))*x)+3</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>
	<function>
		<name>Cardioide</name>
		<lambda>(((x^2)+(y^2)-(y))^2)-((x^2)+(y^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Cardioide</name>
		<lambda>4*(1+(cos(q)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Cardioide</name>
		<lambda>vector{(2*((2*cos(t))-(cos(2*t)))),(2*((2*sin(t))-(sin(2*t))))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Cardioide</name>
		<lambda>vector{(4*(1+cos(t))*cos(t)),(4*(1+cos(t))*sin(t))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Cáscara de Durero</name>
		<lambda>(((x^2)+(x*y)+(x)-(4))^2)-((4-(x^2))*((x-y+1)^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Catenaria</name>
		<lambda>4*(cosh(x/4))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>
	<function>
		<name>Catenaria</name>
		<lambda>vector{(4*(ln(t))),(2*(t+(1/t)))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Duplicatriz cúbica</name>
		<lambda>(x^3)-(2*((x^2)+(y^2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Duplicatriz cúbica</name>
		<lambda>2/((cos(q))^3)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Duplicatriz cúbica</name>
		<lambda>vector{2*(1+(t^2)),2*t*(1+(t^2))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Elipse</name>
		<lambda>1-((x^2)/(3^2))-((y^2)/(2^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Elipse</name>
		<lambda>vector{3*cos(t),2*sin(t)}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Elipse</name>
		<lambda>(2*3)/(root(((4*((cos(q))^2))+(9*((sin(q))^2))),2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Epicicloide</name>
		<lambda>vector{((8+5)*cos(t))-(8*cos((8+5)*(t/8))),((8+5)*sin(t))-(8*sin((8+5)*(t/8)))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Epitrocoide</name>
		<lambda>vector{(8*cos(t))-(5*cos(((5/3)+1)*t)),(8*sin(t))-(5*sin(((5/3)+1)*t))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Escarabajos</name>
		<lambda>(((x^2)+(y^2))*(((x^2)+(y^2)+(0.5*x))^2))-((1.25^2)*(((x^2)-(y^2))^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Escarabajos</name>
		<lambda>(((x^2)+(y^2))*(((x^2)+(y^2)+(0*x))^2))-((2^2)*(((x^2)-(y^2))^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Escarabajos</name>
		<lambda>(1.25*cos(2*q))-(0.5*cos(q))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Escarabajos</name>
		<lambda>(2*cos(2*q))-(0*cos(q))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Escarabajos</name>
		<lambda>(((x^2)+(y^2))*(((x^2)+(y^2)+(1*x))^2))-((1^2)*(((x^2)-(y^2))^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Escarabajos</name>
		<lambda>(((x^2)+(y^2))*(((x^2)+(y^2)+(2*x))^2))-((1^2)*(((x^2)-(y^2))^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Escarabajos</name>
		<lambda>(1*cos(2*q))-(1*cos(q))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Escarabajos</name>
		<lambda>(1*cos(2*q))-(2*cos(q))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Espiral de Arquimedes</name>
		<lambda>1*q</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Espiral de Bernoulli (Jacob I)</name>
		<lambda>5*(e^(q*cot(5)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Espiral de Cotes</name>
		<lambda>5/(cos(7*q))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Espiral de Fermat o Espiral Parabolica</name>
		<lambda>root(((2^2)*q),2)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Espiral de Galileo</name>
		<lambda>(2*(q^2))-2</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Espiral de Galileo</name>
		<lambda>1-(0.2*(q^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Espiral hiperbolica</name>
		<lambda>5/q</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Espiral logaritmica</name>
		<lambda>(e^q)*(1/(root(((7^2)-1),2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Espiral parabolica</name>
		<lambda>root(((2^2)*q),2)+0.1</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Espiral reciproca</name>
		<lambda>5/q</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Espiral de orden superior</name>
		<lambda>root((5^3)*(q/(2*pi)),3)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Espirales sinusoidales</name>
		<lambda>root(2*(3^4)*cos(4*q),4)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Espirales sinusoidales</name>
		<lambda>root(2*(3^3)*cos(3*q),3)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Espirales sinusoidales</name>
		<lambda>root(2*(3^(18/5))*cos((18/5)*q),(18/5))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Espirica de Perseo</name>
		<lambda>(((x^2)+(y^2))^2)-(2*2*(x^2))-(2*(-1)*(y^2))+(-1)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Espirica de Perseo</name>
		<lambda>(2*((cos(q))^2))+(-1*((sin(q))^2))+(root((((2*((cos(q))^2))+(2*((sin(q))^2)))^2)+1,2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Espirica de Perseo</name>
		<lambda>(((x^2)+(y^2))^2)-(2*2*(x^2))-(2*(-1)*(y^2))+(0)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Espirica de Perseo</name>
		<lambda>(2*((cos(q))^2))+(-1*((sin(q))^2))+(root((((2*((cos(q))^2))+(2*((sin(q))^2)))^2)-0,2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Espirica de Perseo</name>
		<lambda>(((x^2)+(y^2))^2)-(2*2*(x^2))-(2*(-1)*(y^2))+(1)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Espirica de Perseo</name>
		<lambda>(2*((cos(q))^2))+(-1*((sin(q))^2))+(root((((2*((cos(q))^2))+(2*((sin(q))^2)))^2)-1,2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Espirica de Perseo</name>
		<lambda>(((x^2)+(y^2))^2)-(2*2*(x^2))-(2*(-1)*(y^2))+(3)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Espirica de Perseo</name>
		<lambda>(2*((cos(q))^2))+(-1*((sin(q))^2))+(root((((2*((cos(q))^2))+(2*((sin(q))^2)))^2)-3,2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>

	<function>
		<name>Espirica de Perseo</name>
		<lambda>(((x^2)+(y^2))^2)-(2*2*(x^2))-(2*(1)*(y^2))+(-1)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Espirica de Perseo</name>
		<lambda>(2*((cos(q))^2))+(1*((sin(q))^2))+(root((((2*((cos(q))^2))+(2*((sin(q))^2)))^2)+1,2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Espirica de Perseo</name>
		<lambda>(((x^2)+(y^2))^2)-(2*2*(x^2))-(2*(1)*(y^2))+(0)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Espirica de Perseo</name>
		<lambda>(2*((cos(q))^2))+(1*((sin(q))^2))+(root((((2*((cos(q))^2))+(2*((sin(q))^2)))^2)-0,2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Espirica de Perseo</name>
		<lambda>(((x^2)+(y^2))^2)-(2*2*(x^2))-(2*(1)*(y^2))+(1)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Espirica de Perseo</name>
		<lambda>(2*((cos(q))^2))+(1*((sin(q))^2))+(root((((2*((cos(q))^2))+(2*((sin(q))^2)))^2)-1,2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Espirica de Perseo</name>
		<lambda>(((x^2)+(y^2))^2)-(2*2*(x^2))-(2*(1)*(y^2))+(3)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Espirica de Perseo</name>
		<lambda>(2*((cos(q))^2))+(1*((sin(q))^2))+(root((((2*((cos(q))^2))+(2*((sin(q))^2)))^2)-3,2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Estrofoide</name>
		<lambda>(((x^2)+(y^2))*(x-(2*0.5)))+((0.5^2)*x)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Estrofoide</name>
		<lambda>0.5*((1+sin(q))/cos(q))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Estrofoide</name>
		<lambda>vector{((2*0.5*(t^2))/(1+(t^2))),(0.5*t*((t^2)-1))/(1+(t^2))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Estrofoide Oblicua</name>
		<lambda>(x*((x^2)+(y^2)))-((4*((x^2)-(y^2)))*sin(15))-(2*x*y*4)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Estrofoide Oblicua</name>
		<lambda>10*((sin(15)-sin(q))/(sin(15+q)))</lambda>
		<dimension>2</dimension>
		<arguments>         
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Óvalos de Munger</name>
		<lambda>(((x^2)+(y^2))^3)-((2*1*(x^3))*(((x^2)+(y^2))^1))+((1-4)*(x^4))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Óvalos de Munger</name>
		<lambda>((cos(q))^2)*((cos(q))+root(4-(1*((sin(q))^2)),2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Panestrofoide</name>
		<lambda>(x*((x^2)+(y^2)))+(4*((x^2)-(y^2)))+(-2*(x+4))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Panestrofoide</name>
		<lambda>(x*((x^2)+(y^2)))+(2*((x^2)-(y^2)))+(4*(x+4))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Parábola</name>
		<lambda>vector{(4/2)*(t^2),(4*t)}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Parábola</name>
		<lambda>(4*(x^2))+(2*x)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>
	<function>
		<name>Parábola</name>
		<lambda>4/(1-cos(q))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Parábola</name>
		<lambda>2*4*((cos(q))/((sin(q))^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Parábola cúbica</name>
		<lambda>(4*y)-(x^3)-((1/4)*x)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Parábola cúbica cuadrática</name>
		<lambda>((x+y)^4)-(5*(x^3))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Parábola cúbica cuadrática</name>
		<lambda>vector{(5/((1+t)^4)),((5*t)/((1+t)^4))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Parábola semi-cúbica de Neile</name>
		<lambda>(x^3)-(2*(y^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Parábola semi-cúbica de Neile</name>
		<lambda>vector{(2*(t^2)),(2*(t^3))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Cúbica con óvalo</name>
		<lambda>((1/2)*(y^2))-(x*(x-3)*(x-1))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Cúbica elíptica de una rama</name>
		<lambda>((1)*(y^2))-(x*(((x-1)^2)+1))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Cúbica acnodal con un punto</name>
		<lambda>((1)*(y^2))-((x^2)*(x-1))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Cúbica con óvalo</name>
		<lambda>((1)*(y^2))-(x*((x^2)-(2*x)+1))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Parábola Virtual (Caso A)</name>
		<lambda>((2^2)*((y^2)-(x^2)))-(y^4)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Parábola Virtual (Caso B)</name>
		<lambda>root((2*1*x),2)+root(((4*(0.5^2))-(((2*(0.5^2))/1)*x)),2)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>
	<function>
		<name>Peonza</name>
		<lambda>(x^4)-(2*x)+(((2^2)/4)*(y^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Perlas</name>
		<lambda>((x^1)*((1-x)^3))-((y/1)^8)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Perlas de orden cuatro</name>
		<lambda>(1*(y^3))-(y^4)-(x^4)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Perlas de orden cuatro</name>
		<lambda>((1/2)*(y^3))-(y^4)-(((1/2)^2)*(x^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Perlas de Sluse</name>
		<lambda>(y^4)-(2*((4-x)^3)*(x^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Petalos geometricos</name>
		<lambda>2+(2*cos(2*1*q))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Petalos geometricos</name>
		<lambda>2+(3*cos(2*1*q))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Petalos geometricos</name>
		<lambda>2+(1*cos(2*10*q))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Petalos geometricos</name>
		<lambda>1*(1+((cos(q))^((2*99)+1)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Petalos geometricos</name>
		<lambda>2+(1*((cos(q))^(2*10)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>

	<function>
		<name>Podaria de las lemniscatas</name>
		<lambda>root((16/2)*((cos((2*q)/3))^2),2)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Poliloide de una circunferencia</name>
		<lambda>(((x^2)+(y^2))*(((((x^2)+(y^2))/2)-x)^2))+(4*(1^4))-(4*(1^2)*((x^2)+(y^2)))+((2/1)*x*((x^2)+(y^2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Poliloide de una circunferencia</name>
		<lambda>(((x^2)+(y^2))*(((((x^2)+(y^2))/(2*1))-x)^2))+(4*((1/4)^4))-(4*((1/4)^2)*((x^2)+(y^2)))+(((2*(1/4))/1)*x*((x^2)+(y^2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Poliloide de una recta</name>
		<lambda>(((x^2)+(y^2))*(x^2))-(((x^2)+(y^2)-(2*(1^2)))^2)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Poliloide de una recta</name>
		<lambda>1/(sin(q/2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Poliloide de una recta paralela al eje polar</name>
		<lambda>(((x^2)+(y^2))*(((1.5-y)^2)-(4*(1^2))))+(4*1.5*(1^2)*y)+(4*(1^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Poliloide de una recta paralela al eje polar</name>
		<lambda>(((x^2)+(y^2))*(((1-y)^2)-(4*(1^2))))+(4*1*(1^2)*y)+(4*(1^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Recta</name>
		<lambda>vector{t,(2*t)+1}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Recta</name>
		<lambda>(2*x)+1</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>
	<function>
		<name>Recta</name>
		<lambda>(2*x)+(2*y)-3</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Recta</name>
		<lambda>3/((2*cos(q))+(2*sin(q)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Rosa de Guido Grandi</name>
		<lambda>1*(cos(5*q))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Rosa de Guido Grandi</name>
		<lambda>1*(cos(4*q))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Secciones Espirales</name>
		<lambda>(((4^2)-(2^2)+(0^2)+(x^2)+(y^2))^2)-(4*(4^2)*((x^2)+(0^2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Sectrices de Okinghaus</name>
		<lambda>1*((sin(((10-2)/2)*q))/(sin((10/2)*q)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Sectrices de Okinghaus</name>
		<lambda>1*((cos(((10-2)/2)*q))/(sin((10/2)*q)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Sectriz de Ceva</name>
		<lambda>(((x^2)+(y^2))^3)-(1*(((3*(x^2))-(y^2))^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Sectriz de Ceva</name>
		<lambda>1+(2*1*(((sin(2*q))*(cos((2+1)*q)))/(sin(q))))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Sectriz de Ceva</name>
		<lambda>vector{(2*cos(t))+(cos((3*t))),sin(3t)}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Sectriz de Coppola</name>
		<lambda>1+(2*1*sin(q/2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Sectriz de Grinten</name>
		<lambda>1*((cos((5/2)*q))/(cos((3/2)*q)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Sectriz de Grinten</name>
		<lambda>1*(((sin(4*q))-(sin(q)))/sin(3*q))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Serpentina de Newton</name>
		<lambda>(((x^2)+(4^2))*y)-(4*2*x)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Serpentina de Newton</name>
		<lambda>(((x^2)+(0.25^2))*y)-(0.25*1.5*x)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Seudoversiera</name>
		<lambda>(((x^2)+(0.75^2))*y)-(2*(0.75^3))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Sextica de Cayley</name>
		<lambda>(4*(((x^2)+(y^2)-(1*x))^3))-(27*(1^2)*(((x^2)+(y^2))^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Sextica de Cayley</name>
		<lambda>(4*2*((cos(q/3))^3))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Sextica de Cayley</name>
		<lambda>(4*(cos(q/4)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Sextica de Legendre</name>
		<lambda>vector{((-7/9)*sin(t*(1+(((-8/3)/3)*((sin(t))^2))))),((3)*(-7/9)*cos(1+(-8/3)-(((-8/3)/3)*((cos(t))^2))))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Tetracuspide</name>
		<lambda>1-((x/5)^(2/3))-((y/5)^(2/3))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Toroide</name>
		<lambda>vector{cos(t*(2+((3*4)/root(((4*((sin(t))^2))+(9*((cos(t))^2))),2)))),sin(t*(2+((2*4)/root(((4*((sin(t))^2))+(9*((cos(t))^2))),2))))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Tractiz</name>
		<lambda>((1*ln((1-root(1-(x^2),2))/x))+root(((1)-(x^2)),2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>
	<function>
		<name>Tractiz</name>
		<lambda>vector{1/cosh(t),t-tanh(t)}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Trebol de Tres Hojas (Trifolium)</name>
		<lambda>(((x^2)+(y^2))^2)+(1*x*((3*(y^2))-(x^2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Trebol de Tres Hojas (Trifolium)</name>
		<lambda>vector{1*((1-(3*(t^2)))/((1+(t^2))^2)),1*((1-(3*(t^2)))/((1+(t^2))^2))*t}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Trebol equilatero</name>
		<lambda>(x*((x^2)-(3*(y^2))))-(2*((x^2)+(y^2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Trebol equilatero</name>
		<lambda>2/cos(3*q)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Tridente de Newton</name>
		<lambda>(x*y)-(0.1*(x^3))-(-1.50*(x^2))-(2*x)+1.2</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>

	<function>
		<name>Trifolium (Curva de 3 hojas)</name>
		<lambda>((x+0.2)*(y^2))-(0.1*(x^2)*(x-(3*0.2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Trifolium (Curva de 3 hojas)</name>
		<lambda>2*((((sin(q))^2)+(3*1*((cos(q))^2)))/((cos(q))*((1*((cos(q))^2))-((sin(q))^2))))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Trifolium (Curva de 3 hojas)</name>
		<lambda>((x+2)*(y^2))-(-1*(x^2)*(x-(3*2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Trifolium (Curva de 3 hojas)</name>
		<lambda>x*root(-1*((x-6)/(x+6)),2)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>
	<function>
		<name>Trifolium (Curva de 3 hojas)</name>
		<lambda>2*((((sin(q))^2)+(3*(-1)*((cos(q))^2)))/((cos(q))*(((-1)*((cos(q))^2))-((sin(q))^2))))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Trifolium o folium de tres lobulos </name>
		<lambda>(((x^2)+(y^2))*((y^2)+(x*(x+2))))-(4*2*x*(y^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Trifolium o folium de tres lobulos </name>
		<lambda>-2*cos(3*q)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Trifolium o folium de tres lobulos </name>
		<lambda>vector{(2*((2*cos(2*t))-(cos(t)))),(2*((2*sin(2*t))+(sin(t))))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Trifolium o folium de tres lobulos </name>
		<lambda>(((x^2)+(y^2))^2)-(((x^2)+(y^2))*((2*x)+(1*y)))-(3*x*((x^2)-(3*(y^2))))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Trifolium de Cramer</name>
		<lambda>(x^4)+(y^4)-(2*1*x*((x^2)-(y^2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Trifolium de Cramer</name>
		<lambda>1*((2*1*(cos(q))*(cos(2*q)))/(((cos(q))^4)+((sin(q))^4)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Trifolium Oblicuo</name>
		<lambda>(2*1.2*cos(q))+(2*1.2*cos((3*q)-0.7))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Trifolium Recto</name>
		<lambda>(((x^2)+(y^2))^2)-(2*x*((x^2)-(y^2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Trifolium Recto</name>
		<lambda>0.75*(cos(q))*(cos(2*q))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Trisectriz de Catalan o de Tschirnhausen</name>
		<lambda>(((x^2)+(y^2))*(6+x))-32</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Trisectriz de Catalan o de Tschirnhausen</name>
		<lambda>vector{(2*cos(t))/(cos(t/3)),(2*sin(t))/(cos(t/3))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Trisectriz de Delanges</name>
		<lambda>((1-(y^2))*((x^2)+(y^2)))-(1/4)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Trisectriz de Delanges</name>
		<lambda>(((x^2)+(y^2)-(2*(1^2)))^2)-((x^2)*((x^2)+(y^2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Trisectriz de Delanges</name>
		<lambda>1/(cos(q/2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Trisectriz de Longchamps</name>
		<lambda>(x*((x^2)-(3*(y^2))))-(3*((x^2)+(y^2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Trisectriz de Longchamps</name>
		<lambda>-1/(cos(3*q))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Trisectriz de MacLaurin</name>
		<lambda>((y^)*(2+x))-((x^2)*((3*2)-x))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Trisectriz de MacLaurin</name>
		<lambda>(x*((x^2)+(y^2)))-(2*((3*(x^2))-(y^2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Trisectriz de MacLaurin</name>
		<lambda>2*(((4*((cos(q))^2))-1)/((cos(q))))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Trisectriz de MacLaurin</name>
		<lambda>2/(cos(q/3))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Trisectriz de MacLaurin</name>
		<lambda>vector{2*(((sin(t))^2)-(3*((cos(t))^2))),2*(((sin(t))^2)-(3*((cos(t))^2)))*tan(t)}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Trocoide</name>
		<lambda>vector{(2*t)-(5*sin(t)),2-(5*cos(t))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Trompo</name>
		<lambda>(x^4)-(2*(x^3))+(((2^2)/4)*(y^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Trompo</name>
		<lambda>vector{2*((cos(t))^2),(2^3)*((cos(t))^3)*sin(t)}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Versiera oblicua</name>
		<lambda>(((x^2)+(y^2))*((x*cos(45))+(y*sin(45))-(4*((cos(45))^2))))+(2*3*(y^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Visiera</name>
		<lambda>(((2*y)-2)*((x^2)+(y^2)))-(2*(y^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Visiera</name>
		<lambda>(2/2)*((sin(q))+(1/(sin(q))))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Visiera</name>
		<lambda>vector{(4*t*(((t^2)+2)/(2*((t^2)+1)))),(4*(((t^2)+1)/(2*((t^2)+1))))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Cicloide</name>
		<lambda>vector{((2*t)-(3*(sin(t)))),(2-(3*(cos(t))))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Cicloide alargada</name>
		<lambda>(2*(arccos((2-y)/(3))))-(root(((3+2-y)*(3-2+y)),2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Cicloide reducida</name>
		<lambda>(3*arccos((3-y)/(2)))-(root(((2+3-y)*(2-3+y)),2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Cicloide secundaria de Ricci</name>
		<lambda>vector{((4*t)-(3*(sin(t)))),(3-(3*(cos(t))))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Círculo</name>
		<lambda>(x^2)+(y^2)-(9)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Círculo</name>
		<lambda>((x^2)-3)+((y^2)-2)-(9)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Círculo</name>
		<lambda>vector{(3*cos(t)),(3*sin(t))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Círculo</name>
		<lambda>vector{(2+(3*cos(t))),(1+(3*sin(t)))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Círculo</name>
		<lambda>3</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Cisoide alargada</name>
		<lambda>((y^2)*(2.25-x))-((x^2)*(x-0.25))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Cisoide de curva de segundo orden</name>
		<lambda>((-1)/(cos(q)))-((2*2*(cos(q)))/(((sin(q))^2)-((1/2)*((cos(q))^2))))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Cisoide de curva de segundo orden</name>
		<lambda>vector{((-1)+((2*1)/((1)-(t^2)))),((-1*t)+((2*t)/(1-(t^2))))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Cisoide de cuarto nivel</name>
		<lambda>((y^2)*(4-((1+x)^2)))-(((x^2)+(4)-(1))^2)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Cisoide oblicua</name>
		<lambda>(x*((x^2)+(y^2)))-((-4*((x*sin(pi/4))+(y*cos(pi/4))))^2)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Cisoide oblicua</name>
		<lambda>vector{((2*-2*t)/((1+(t^2))*(sin(pi/4)+(t*cos(pi/4))))),((2*-2)/((1+(t^2))+(sin(pi/4)+(t*cos(pi/4)))))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Cisoide oblicua</name>
		<lambda>(2*5*((sin(q))^2))/(cos(q-(pi/4)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Cisoide reducida</name>
		<lambda>((y^2)*(2-x))-((x^2)*(x))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Clinoide</name>
		<lambda>((1/2)*e^(x/2))+((-1/3)*e^(x/2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>
	<function>
		<name>Cocleoide--</name>
		<lambda>(x*(tan((2*y)/((x^2)+(y^2)))))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>
	<function>
		<name>Cocleoide</name>
		<lambda>10*(sin(q)/q)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Concoide de Slüse</es>
		</name>
		<lambda>(20)+(10/cos(q))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>--Concoide de Slüse</es>
		</name>
		<lambda>vector{((0.4)+((1^2)/(0.4*(1+(t^2))))),(((0.4)+((1^2)/(0.4*(1+(t^2)))))*t)}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Concoide de Slüse</es>
		</name>
		<lambda>((0.5)*(x-0.5)*((x^2)+(y^2)))+((1^2)*(x^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Variante Concoide de Slüse</es>
		</name>
		<lambda>vector{((0.15)-((1^2)/(0.15*(1+(t^2))))),(((0.15)-((1^2)/(0.15*(1+(t^2)))))*t)}
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Concoide de Durero</es>
		</name>
		<lambda>vector{(((2*cos(t))/((cos(t))-(sin(t))))+(3*cos(t))),(3*sin(t))}
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Concoide de Kulp</es>
		</name>
		<lambda>((x^2)*(y^2))-((2^2)*((2^2)-(x^2)))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Concoide de Kulp</es>
		</name>
		<lambda>vector{(2*cos(t)),(2*tan(t))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Concoide de Nicomedes</es>
		</name>
		<lambda>(((x-2)^2)*((x^2)+(y^2)))-((3^2)*(x^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Concoide de Nicomedes</es>
		</name>
		<lambda>(4)+(3*sec(q))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Concoide de Nicomedes</es>
		</name>
		<lambda>(2)+(2*sec(q))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Concoide de Nicomedes</es>
		</name>
		<lambda>(4)+(2*sec(q))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>-Concoide de Nicomedes</es>
		</name>
		<lambda>vector{((2)+2*(((1-(t^2)/(1+(t^2)))))),((2*t)/(((2)/(1-(t^2)))+((2)/(1+(t^2)))))}
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>--Concoide Oblicua</es>
		</name>
		<lambda>vector{((1*cos(t))-(1.50*cos(1.50+t))),(-1.5*(sin(1.5+t)))}
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>-Concoide Oblicua</es>
		</name>
		<lambda>(((x*y*cos(pi/2))-(((y^2)+(1*y)-(1.50^2))*(sin(pi/2))))^2)-((((x*sin(pi/2))+(y*cos(pi/2))+(1*cos(pi/2)))^2)*((1.5^2)-(y^2)))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument><argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Cornoide</es>
		</name>
		<lambda>vector{(5*(cos(t))*(cos(2*t))),(5*(sin(t))*(2+(cos(2*t))))}
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Cranioide</es>
		</name>
		<lambda>(cos(q))+(1*root((1-((0.5^2)*((sin(q))^2))),2))+(root((1-((0.95^2)*((sin(q))^2))),2))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Cruz Celta</es>
		</name>
		<lambda>(y^4)-(x^4)-(x*y)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument><argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>-Cruz de Malta</es>
		</name>
		<lambda>(x*y*((x^2)-(y^2)))-(x^2)-(y^2)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument><argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>-Cruz de Malta</es>
		</name>
		<lambda>root(((1)/((cos(q))*(sin(q))*(((cos(q)^2))-((sin(q)^2))))),2)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Cuadrafolium</es>
		</name>
		<lambda>(((x^2)+(y^2))^3)-(4*4*x^2*y^2)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument><argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Cuadratriz de Abdank-Abakanowicz</es>
		</name>
		<lambda>(2*arcsin(x/2))+((x/2)*(root((4)-(x^2),2)))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Cuadratriz de Abdank-Abakanowicz</es>
		</name>
		<lambda>vector{(2*sin(t)),((2)*(t+(sin(t)*cos(t))))}
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Cuadratriz de Dinostrato</es>
		</name>
		<lambda>y/x-cot((pi*x)/4)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument><argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Cuadratriz de Dinostrato</es>
		</name>
		<lambda>vector{((4*t)/(pi)),((4*t*cot(t))/(pi))}
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Cuadratriz de Dinostrato</es>
		</name>
		<lambda>((2*(pi-(2*q)))/(pi*cos(q)))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>-Cuadratriz de Hippias</es>
		</name>
		<lambda>x*(cot((pi*x)/(8)))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Cuadratriz de Hippias</es>
		</name>
		<lambda>(2*4*q)/(pi*sin(q))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Cuadratriz de Hippias</es>
		</name>
		<lambda>vector{((1-t)*(tan((pi*t)/2))),(1-t)}
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Cuadratriz de Tschirnhausen</es>
		</name>
		<lambda>sin((pi*x)/(2))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Cuártica de Bernoulli</es>
		</name>
		<lambda>(y^4)-(((((1^2)+(2^2))/(2))-(x^2))*(y^2))+((((1^2)-(2^2))/(4))^2)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument><argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Cuártica de Bonnet</es>
		</name>
		<lambda>(x^4)-(0.75*x^3)+(0.75^2*y^2)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument><argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Cuártica piriforme o en forma de pera</es>
		</name>
		<lambda>((10^2)*(y^2))-((x^3)*(10-x))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument><argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Cuártica piriforme o en forma de pera</es>
		</name>
		<lambda>(x/10)*(root((10*x)-(x^2),2))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Cuártica piriforme o en forma de pera</es>
		</name>
		<lambda>vector{(10*(cos(t)^2)),((10^2*cos(t)^3*sin(t))/(10))}
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Cúbica de Chasles</es>
		</name>
		<lambda>(x^3)+(x^2*y)+(x*y^2)+(y^3)-(y)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument><argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Cúbica de Tschirnhausen o Cúbica de L'Hopital</es>
		</name>
		<lambda>(3*5*y^2)-((x)*((x-5)^2))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument><argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Cúbica de Tschirnhausen o Cúbica de L'Hopital</es>
		</name>
		<lambda>vector{(9*5*(1-(3*t^2))),(9*5*t*(1-(3*t^2)))}
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function><function>
		<name>
			<es>Cúbica de Tschirnhausen o Cúbica de L'Hopital</es>
		</name>
		<lambda>(10)/(cos(q/3)^3)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva aceleración</es>
		</name>
		<lambda>((x-y)*(x^2+y^2)^3)-(3*5^2*3^2*x^3)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument><argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva de Baum</es>
		</name>
		<lambda>((((x^2)/2^2)-(1.5*sin(pi*x/4))+1)*2^2)-(y^2)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument><argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva de Caraccioli</es>
		</name>
		<lambda>((1/cos(q))*(1-(((2*q)/pi)^(2/3))))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva de Cramer</es>
		</name>
		<lambda>(x*(x^2+y^2))+(2.5*x^2)-(1.5*y^2)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument><argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva de Cramer</es>
		</name>
		<lambda>(-2*0.5*cos(2*q))/(cos(q))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva de Beaune</es>
		</name>
		<lambda>x-(y/0.5)+(1/0.5)-(e^(-y/1))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument><argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva de Dumbbell</es>
		</name>
		<lambda>(y^2)-(5^2*(x^4-x^6))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument><argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva de Dumbbell</es>
		</name>
		<lambda>vector{(t),(5*t^2*root((1-t^2),2))}
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva de Fermat</es>
		</name>
		<lambda>x^5+y^5-1
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument><argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva de frecuencia o curva de Gauss</es>
		</name>
		<lambda>(2*pi)^(-0.5)*e^(-1*(x^2)/2)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva de Jerabeck</es>
		</name>
		<lambda>((10^2)*((x^2)+(y^2)-(5*x))^2)-((5^2)*((x^2)+(y^2))*(x-5)^2)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument><argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva de Jerabeck</es>
		</name>
		<lambda>(5)*(((6*cos(q))-(5))/((6)-(5*cos(q))))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva de Kiepert</es>
		</name>
		<lambda>((x^2+y^2)^3)-(3^3*x*(x^2-(3*y^2)))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument><argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva de Lenard-Jones</es>
		</name>
		<lambda>(x^(-2))-(x^(-1))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva de Mascheroni</es>
		</name>
		<lambda>((x^2+y^2)*(x^2))-((3*x+8*y)^2)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva de Ozanam</es>
		</name>
		<lambda>2*(5)*((sin(y/(2*5)))^2)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva de Persecusión</es>
		</name>
		<lambda>(6*x^2)-(log(x))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva de Rolle</es>
		</name>
		<lambda>(x*y^2)-(5*((x+y)^2))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument><argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva de Rolle</es>
		</name>
		<lambda>(5)*(((cos(q))+(sin(q)))/((cos(q))*((sin(q))^2)))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>--Curva de Talbot</es>
		</name>
		<lambda>vector{((((2^2)+((3/4)^2)*(sin(t)^2)))*(cos(t)/5)),(((2^2)-(2*((3/4)^2))+(((3/4)^2)*((sin(t))^2)))*(sin(t)/1))}
		</lambda>            
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva del Estribo</es>
		</name>
		<lambda>(((x^2)-1)^2)-((y^2)*(y-1)*(y-2)*(y+5))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>

	<function>
		<name>
			<es>Curva doble corazón</es>
		</name>
		<lambda>(y^4)+(2*(x^2)*(y^2))+(x^4)-(6*5*x*(y^2))-(5*(x^3))+(25*(x^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>

	<function>
		<name>
			<es>Curva doble corazón</es>
		</name>
		<lambda>0.5*(root(x*(10-x), 2)+root(x*(20-x), 2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>

	<function>
		<name>
			<es>Curva en cruz o curva cruciforme</es>
		</name>
		<lambda>(25/x^2)+(36/y^2)-(1)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>

	<function>
		<name>
			<es>Curva en cruz o curva cruciforme</es>
		</name>
		<lambda>(36*x^2)+(25*y^2)-(x^2*y^2)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>

	<function>
		<name>
			<es>Curva en cruz o curva cruciforme</es>
		</name>
		<lambda>vector{(5/cos(t)),(6/sin(t))}</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva en forma de Ampersand</es>
		</name>
		<lambda>(((y^2)-(x^2))*(x-1)*((2*x)-(3)))-((4)*((x^2+y^2-2*x)^2))</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>

	<function>
		<name>
			<es>Curva error</es>
		</name>
		<lambda>e^(-1*x^4)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>

	<function>
		<name>
			<es>Curva exponencial-cosenoidal</es>
		</name>
		<lambda>e^(-1*x)*cos(10*x)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>

	<function>
		<name>
			<es>Curva Kappa</es>
		</name>
		<lambda>((y^2)*(x^2+y^2))-(25*x^2)</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva Kappa</es>
		</name>
		<lambda>5*cot(q)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva Kappa</es>
		</name>
		<lambda>vector{(5*cos(t)*cot(t)),(5*cos(t))}
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva Kappa Oblicua</es>
		</name>
		<lambda>5*((sin(q+0.1))/(sin(q)))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva ofiúrida</es>
		</name>
		<lambda>(x*(x^2+y^2))-(y*(4*y-8x))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
	 <argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva ofiúrida</es>
		</name>
		<lambda>(5*sin(q)-6*cos(q))*(tan(q))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva pankappa</es>
		</name>
		<lambda>((y-5)^2*(x^2+y^2))-(36*x^2)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
	 <argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva pankappa</es>
		</name>
		<lambda>(5+6*cos(q))/(sin(q))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>-Curva pankappa oblicua</es>
		</name>
		<lambda>(y-0.05)^2*(x^2+y^2)-(4*x+0.6*y)^2
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
	 <argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva pankappa oblicua</es>
		</name>
		<lambda>(1+2*cos(q)-2*sin(q))/(sin(q))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva politrópica</es>
		</name>
		<lambda>((x^0.333333333333)*(y^0.666666666667))-(5)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
	 <argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva polizomal de Bernoulli</es>
		</name>
		<lambda>(y^4)-(6*25*y^2)+(4*x^2*y^2)+(5^4)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
	 <argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva polizomal de Bernoulli</es>
		</name>
		<lambda>(-root(((2*5^2)-(x^2)),2))-(root(((25)-
	(x^2)),2))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curva seno-cosenoidal</es>
		</name>
		<lambda>(sin(42*x))*cos(2*x)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
		</arguments>
	</function>
	<function>
		<name><es>Curvas de Lissajous</es></name>
		<lambda>vector{(5*sin(0.1*t+8)),(4*sin(0.3*t+3))}
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name><es>Curvas de Mordell</es></name>
		<lambda>(x^3)+(x)+(1)-(y^2)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
	 <argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curvas de Mordell</es>
		</name>
		<lambda>(x^3)+(x^2)-(y^2)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
	 <argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curvas de Mordell</es>
		</name>
		<lambda>(x^3)+(x^4)-(y^2)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
	 <argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curvas de Mordell</es>
		</name>
		<lambda>(x^3)+(x)-(y^2)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
	 <argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curvas de Mordell</es>
		</name>
		<lambda>(x^3)-(x)-(y^2)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
	 <argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curvas de Mordell</es>
		</name>
		<lambda>(x^3)-(x)+1-(y^2)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
	 <argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curvas de Ribaucour</es>
		</name>
		<lambda>root((5^(1/2)*sin(q/2)),(1/(2)))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>--Curvas de Watt</es>
		</name>
		<lambda>((x^2+y^2)*(x^2+y^2-4-9+25)^2)+(4*4*y^2*(x^2+y^2-9))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
	 <argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>--Curvas de Watt</es>
		</name>
		<lambda>root(((16)-(((5*sin(q))+(root(36-25*(cos(q)^2),2)))^2)),2)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>--Curvas de Watt-lemnis</es>
		</name>
		<lambda>root(36-4*25*(sin(q)^2),2)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>q</argument>
		</arguments>
	</function>
	<function>
		<name><es>Curvas de Lamé</es></name>
		<lambda>(x^100+y^100)-1
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
	 <argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Curvas Plateau</es>
		</name>
		<lambda>vector{((5*sin(8*t))/(sin(2*t))),((10*sin(5*t)*sin(3*t))/(sin(2*t)))}
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Deltoide</es>
		</name>
		<lambda>(((x^2)+(y^2)+(12*5*x)+(9*25))^2)-(20*((2*x+15)^3))
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
	 <argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>Deltoide</es>
		</name>
		<lambda>vector{(5*((2*cos(t))+(cos(2*t)))),(5*((2*sin(t))-(sin(2*t))))}
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>-Doble óvalo</es>
		</name>
		<lambda>((x^2+y^2)^3)-(25*x^4)
	</lambda>
		<dimension>2</dimension>
		<arguments>
			<argument>x</argument>
	 <argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>
			<es>-Doble óvalo</es>
		</name>
		<lambda>3*(cos(q))^2
	</lambda>
		<dimension>2</dimension>
		<arguments>
	 <argument>q</argument>
		</arguments>
	</function>
	<function>
		<name>Disco</name>
		<lambda>8</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>r</argument>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Huracan</name>
		<lambda>vector{1 * (2*cosh(v/2)*cos(u) * cos((2.1 * (2*cosh(v/2)*sin(u) * sin((2*cosh(v/2)*cos(u) - -5.01836)*2*pi*0/10.0367) + 2*(v) * cos((2*cosh(v/2)*cos(u) - -5.01836)*2*pi*0/10.0367))   - -13.1947)*2*pi*1.5/26.3894) - 2.1 * (2*cosh(v/2)*sin(u) * cos((2*cosh(v/2)*cos(u) - -5.01836)*2*pi*0/10.0367) - 2*(v) * sin((2*cosh(v/2)*cos(u) - -5.01836)*2*pi*0/10.0367))   * sin((2.1 * (2*cosh(v/2)*sin(u) * sin((2*cosh(v/2)*cos(u) - -5.01836)*2*pi*0/10.0367) + 2*(v) * cos((2*cosh(v/2)*cos(u) - -5.01836)*2*pi*0/10.0367))   - -13.1947)*2*pi*1.5/26.3894)),2.1 * (2*cosh(v/2)*sin(u) * sin((2*cosh(v/2)*cos(u) - -5.01836)*2*pi*0/10.0367) + 2*(v) * cos((2*cosh(v/2)*cos(u) - -5.01836)*2*pi*0/10.0367)),1 * (2*cosh(v/2)*cos(u) * sin((2.1 * (2*cosh(v/2)*sin(u) * sin((2*cosh(v/2)*cos(u) - -5.01836)*2*pi*0/10.0367) + 2*(v) * cos((2*cosh(v/2)*cos(u) - -5.01836)*2*pi*0/10.0367))   - -13.1947)*2*pi*1.5/26.3894) + 2.1 * (2*cosh(v/2)*sin(u) * cos((2*cosh(v/2)*cos(u) - -5.01836)*2*pi*0/10.0367) - 2*(v) * sin((2*cosh(v/2)*cos(u) - -5.01836)*2*pi*0/10.0367))   * cos((2.1 * (2*cosh(v/2)*sin(u) * sin((2*cosh(v/2)*cos(u) - -5.01836)*2*pi*0/10.0367) + 2*(v) * cos((2*cosh(v/2)*cos(u) - -5.01836)*2*pi*0/10.0367))   - -13.1947)*2*pi*1.5/26.3894)) }</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>u</argument>
			<argument>v</argument>
		</arguments>
	</function>
	<function>
		<name>Seudo Toroide</name>
		<lambda>vector{(1+ 0.5*cos(u))*cos(v),0.632456 * ((1+ 0.5*cos(u))*sin(v) * cos(((1+ 0.5*cos(u))*cos(v) - -1.5)*2*pi*0.9/3) - 0.5*sin(u) * sin(((1+ 0.5*cos(u))*cos(v) - -1.5)*2*pi*0.9/3)),0.632456 * ((1+ 0.5*cos(u))*sin(v) * sin(((1+ 0.5*cos(u))*cos(v) - -1.5)*2*pi*0.9/3) + 0.5*sin(u) * cos(((1+ 0.5*cos(u))*cos(v) - -1.5)*2*pi*0.9/3))}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>u</argument>
			<argument>v</argument>
		</arguments>
	</function>
	<function>
		<name>Seudo Cubo</name>
		<lambda>vector{0.848528 * (cos(u)*cos(v)*(abs(cos(4*u/4))^100 + abs(sin(4*u/4))^100)^(-1/100)*(abs(cos(4*v/4))^100 + abs(sin(4*v/4))^100)^(-1/100) * cos((1.6*(sin(u)*(abs(cos(4*u/4))^100 + abs(sin(4*u/4))^100)^(-1/100)) - -1.6)*2*pi*0.3/3.2) - cos(u)*sin(v)*(abs(cos(4*u/4))^100 + abs(sin(4*u/4))^100)^(-1/100)*(abs(cos(4*v/4))^100 + abs(sin(4*v/4))^100)^(-1/100) * sin((1.6*(sin(u)*(abs(cos(4*u/4))^100 + abs(sin(4*u/4))^100)^(-1/100)) - -1.6)*2*pi*0.3/3.2)),0.848528 * (cos(u)*cos(v)*(abs(cos(4*u/4))^100 + abs(sin(4*u/4))^100)^(-1/100)*(abs(cos(4*v/4))^100 + abs(sin(4*v/4))^100)^(-1/100) * sin((1.6*(sin(u)*(abs(cos(4*u/4))^100 + abs(sin(4*u/4))^100)^(-1/100)) - -1.6)*2*pi*0.3/3.2) + cos(u)*sin(v)*(abs(cos(4*u/4))^100 + abs(sin(4*u/4))^100)^(-1/100)*(abs(cos(4*v/4))^100 + abs(sin(4*v/4))^100)^(-1/100) * cos((1.6*(sin(u)*(abs(cos(4*u/4))^100 + abs(sin(4*u/4))^100)^(-1/100)) - -1.6)*2*pi*0.3/3.2)),1.6*(sin(u)*(abs(cos(4*u/4))^100 + abs(sin(4*u/4))^100)^(-1/100))}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>u</argument>
			<argument>v</argument>
		</arguments>
	</function>
	<function>
		<name>Seudo Hexágono</name>
		<lambda>vector{1.7*(cos(u)*cos(v)*(abs(cos(4*u/4))^300 + abs(sin(4*u/4))^300)^(-1/300)*(abs(cos(6*v/4))^400 + abs(sin(6*v/4))^400)^(-1/1000)),0.743482 * (1.5*(cos(u)*sin(v)*(abs(cos(4*u/4))^300 + abs(sin(4*u/4))^300)^(-1/300)*(abs(cos(6*v/4))^400 + abs(sin(6*v/4))^400)^(-1/1000)) * cos((1.7*(cos(u)*cos(v)*(abs(cos(4*u/4))^300 + abs(sin(4*u/4))^300)^(-1/300)*(abs(cos(6*v/4))^400 + abs(sin(6*v/4))^400)^(-1/1000)) - -1.7)*2*pi*0.3/3.4) - 0.7*(sin(u)*(abs(cos(4*u/4))^300 + abs(sin(4*u/4))^300)^(-1/300)) * sin((1.7*(cos(u)*cos(v)*(abs(cos(4*u/4))^300 + abs(sin(4*u/4))^300)^(-1/300)*(abs(cos(6*v/4))^400 + abs(sin(6*v/4))^400)^(-1/1000)) - -1.7)*2*pi*0.3/3.4)),0.743482 * (1.5*(cos(u)*sin(v)*(abs(cos(4*u/4))^300 + abs(sin(4*u/4))^300)^(-1/300)*(abs(cos(6*v/4))^400 + abs(sin(6*v/4))^400)^(-1/1000)) * sin((1.7*(cos(u)*cos(v)*(abs(cos(4*u/4))^300 + abs(sin(4*u/4))^300)^(-1/300)*(abs(cos(6*v/4))^400 + abs(sin(6*v/4))^400)^(-1/1000)) - -1.7)*2*pi*0.3/3.4) + 0.7*(sin(u)*(abs(cos(4*u/4))^300 + abs(sin(4*u/4))^300)^(-1/300)) * cos((1.7*(cos(u)*cos(v)*(abs(cos(4*u/4))^300 + abs(sin(4*u/4))^300)^(-1/300)*(abs(cos(6*v/4))^400 + abs(sin(6*v/4))^400)^(-1/1000)) - -1.7)*2*pi*0.3/3.4))}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>u</argument>
			<argument>v</argument>
		</arguments>
	</function>
	<function>
		<name>Seudo Cono</name>
		<lambda>vector{u*cos(v),0.848528 * (u*sin(v) * cos((u*cos(v) - -1)*2*pi*1/2) - u * sin((u*cos(v) - -1)*2*pi*1/2)),0.848528 * (u*sin(v) * sin((u*cos(v) - -1)*2*pi*1/2) + u * cos((u*cos(v) - -1)*2*pi*1/2))}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>u</argument>
			<argument>v</argument>
		</arguments>
	</function>
	<function>
		<name>Seudo Hélice</name>
		<lambda>vector{0.717627 * ((1-0.1*cos(v))*cos(u) * cos(((1-0.1*cos(v))*sin(u) - -1.1)*2*pi*0.2/2.2) - 0.1*(sin(v) + u/1.7 -10) * sin(((1-0.1*cos(v))*sin(u) - -1.1)*2*pi*0.2/2.2)),(1-0.1*cos(v))*sin(u),0.717627 * ((1-0.1*cos(v))*cos(u) * sin(((1-0.1*cos(v))*sin(u) - -1.1)*2*pi*0.2/2.2) + 0.1*(sin(v) + u/1.7 -10) * cos(((1-0.1*cos(v))*sin(u) - -1.1)*2*pi*0.2/2.2))}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>u</argument>
			<argument>v</argument>
		</arguments>
	</function>
	<function>
		<name>Seudo Esfera</name>
		<lambda>vector{cos(u)*cos(v)+sin((sin(u)+1)*2*pi),cos(u)*sin(v)+cos((sin(u)+1)*2*pi),4*sin(u)}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>u</argument>
			<argument>v</argument>
		</arguments>
	</function>
	<function>
		<name>Seudo Catenoide</name>
		<lambda>vector{2.2*(2*cosh(v/2)*cos(u)),1.51166 * (2*cosh(v/2)*sin(u) * cos((2.2*(2*cosh(v/2)*cos(u)) - -11.0404)*2*pi*1/22.0513) - 1.8*(v) * sin((2.2*(2*cosh(v/2)*cos(u)) - -11.0404)*2*pi*1/22.0513)),1.51166 * (2*cosh(v/2)*sin(u) * sin((2.2*(2*cosh(v/2)*cos(u)) - -11.0404)*2*pi*1/22.0513) + 1.8*(v) * cos((2.2*(2*cosh(v/2)*cos(u)) - -11.0404)*2*pi*1/22.0513))}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>u</argument>
			<argument>v</argument>
		</arguments>
	</function>
	<function>
		<name>Prisma</name>
		<lambda>vector{cos(u)*cos(v)*(abs(cos(3*v/4))^500 + abs(sin(3*v/4))^500)^(-1/260)*(abs(cos(4*u/4))^200 + abs(sin(4*u/4))^200)^(-1/200),cos(u)*sin(v)*(abs(cos(3*v/4))^500 + abs(sin(3*v/4))^500)^(-1/260)*(abs(cos(4*u/4))^200 + abs(sin(4*u/4))^200)^(-1/200),sin(u)*(abs(cos(4*u/4))^200 + abs(sin(4*u/4))^200)^(-1/200)}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>u</argument>
			<argument>v</argument>
		</arguments>
	</function>
	<function>
		<name>Cubo</name>
		<lambda>vector{cos(u)*cos(v)*(abs(cos(4*u/4))^100 + abs(sin(4*u/4))^100)^(-1/100)*(abs(cos(4*v/4))^100 + abs(sin(4*v/4))^100)^(-1/100),cos(u)*sin(v)*(abs(cos(4*u/4))^100 + abs(sin(4*u/4))^100)^(-1/100)*(abs(cos(4*v/4))^100 + abs(sin(4*v/4))^100)^(-1/100),sin(u)*(abs(cos(4*u/4))^100 + abs(sin(4*u/4))^100)^(-1/100)}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>u</argument>
			<argument>v</argument>
		</arguments>
	</function>
	<function>
		<name>Hexágono</name>
		<lambda>vector{cos(u)*cos(v)*(abs(cos(4*u/4))^300 + abs(sin(4*u/4))^300)^(-1/300)*(abs(cos(6*v/4))^400 + abs(sin(6*v/4))^400)^(-1/1000),cos(u)*sin(v)*(abs(cos(4*u/4))^300 + abs(sin(4*u/4))^300)^(-1/300)*(abs(cos(6*v/4))^400 + abs(sin(6*v/4))^400)^(-1/1000),sin(u)*(abs(cos(4*u/4))^300 + abs(sin(4*u/4))^300)^(-1/300)}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>u</argument>
			<argument>v</argument>
		</arguments>
	</function>
	<function>
		<name>Cono</name>
		<lambda>vector{cos(u)*cos(v)*(abs(cos(4*u/4))^1 + abs(sin(4*u/4))^1)^(-1/1)*(abs(cos(4*v/4))^1 + abs(sin(4*v/4))^1)^(-1/100),cos(u)*sin(v)*(abs(cos(4*u/4))^1 + abs(sin(4*u/4))^1)^(-1/1)*(abs(cos(4*v/4))^1 + abs(sin(4*v/4))^1)^(-1/100),sin(u)*(abs(cos(4*u/4))^1 + abs(sin(4*u/4))^1)^(-1/1)}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>u</argument>
			<argument>v</argument>
		</arguments>
	</function>
	<function>
		<name>Diamante</name>
		<lambda>vector{cos(u)*cos(v)*(abs(cos(4*u/4))^1 + abs(sin(4*u/4))^1)^(-1/1)*(abs(cos(4*v/4))^1 + abs(sin(4*v/4))^1)^(-1/1),cos(u)*sin(v)*(abs(cos(4*u/4))^1 + abs(sin(4*u/4))^1)^(-1/1)*(abs(cos(4*v/4))^1 + abs(sin(4*v/4))^1)^(-1/1),sin(u)*(abs(cos(4*u/4))^1 + abs(sin(4*u/4))^1)^(-1/1)}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>u</argument>
			<argument>v</argument>
		</arguments>
	</function>
	<function>
		<name>Folium</name>
		<lambda>vector{cos(u) *(2*v/pi - tanh(v)),cos(u + 2*pi / 3) / cosh(v),cos(u - 2*pi / 3) / cosh(v)}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>u</argument>
			<argument>v</argument>
		</arguments>
	</function>
	<function>
		<name>Corazón</name>
		<lambda>vector{cos(u)*(4*root(1-v^2,2)*sin(abs(u))^abs(u)),sin(u) *(4*root(1-v^2,2)*sin(abs(u))^abs(u)),v}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>u</argument>
			<argument>v</argument>
		</arguments>
	</function>
	<function>
		<name>Flor</name>
		<lambda>vector{v *cos(u) -0.5*v^2*cos(2*u),-v*sin(u) -0.5*v^2*sin(2*u),4* v^1.5 *cos(3* u / 2) / 3}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>u</argument>
			<argument>v</argument>
		</arguments>
	</function>
	<function>
		<name>Espiral Cónica o Caracol</name>
		<lambda>vector{1.2^v*(sin(u)^2 *sin(v)),1.2^v*(sin(u)^2 *cos(v)),1.2^v*(sin(u)*cos(u))}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>u</argument>
			<argument>v</argument>
		</arguments>
	</function>
	<function>
		<name>Toro</name>
		<lambda>vector{(3+1.5*cos(u))*cos(v),(3+1.5*cos(u))*sin(v),1.5*sin(u)}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>u</argument>
			<argument>v</argument>
		</arguments>
	</function>
	<function>
		<name>Bolsa de Caramelo</name>
		<lambda>vector{u,cos (u)*cos (v),cos(u)*sin(v)}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>u</argument>
			<argument>v</argument>
		</arguments>
	</function>
	<function>
		<name>Serpiente o Culebra</name>
		<lambda>vector{1.2*(1 -v/(2*pi))*cos(3*v)*(1 + cos(u)) + 3*cos(3*v),1.2*(1 -v/(2*pi))*sin(3*v)*(1 + cos(u)) + 3*sin(3*v),9*v/(2*pi) + 1.2*(1 - v/(2*pi))*sin(u)}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>u</argument>
			<argument>v</argument>
		</arguments>
	</function>
	<function>
		<name>Manzana</name>
		<lambda>vector{cos(u) *(4 + 3.8* cos(v)),sin(u) *(4 + 3.8* cos(v)),(cos(v) + sin(v) - 1)* (1 + sin(v)) *log(1 - pi *v / 10) + 7.5 *sin(v)}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>u</argument>
			<argument>v</argument>
		</arguments>
	</function>
	<function>
		<name>Gota</name>
		<lambda>vector{u*cos(v)-2,u*sin(v)+2,(sin(2*pi*u)-u*cos(3*v))/exp(u^2)}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>u</argument>
			<argument>v</argument>
		</arguments>
	</function>
	<function>
		<name>Elipsoide</name>
		<lambda>vector{cos(u)*cos(v),sin(u)*cos(v),sin(v)}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>u</argument>
			<argument>v</argument>
		</arguments>
	</function>
	<function>
		<name>Cinta de Moebius</name>
		<lambda>vector{cos(v)+u*cos(v/2)*cos(v),sin(v)+u*cos(v/2)*sin(v),u*sin(v/2)}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>u</argument>
			<argument>v</argument>
		</arguments>
	</function>
	<function>
		<name>Esfera</name>
		<lambda>5</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>s</argument>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Cono</name>
		<lambda>r</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>r</argument>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Plano X</name>
		<lambda>x</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Plano Y</name>
		<lambda>y</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Plano XY</name>
		<lambda>0</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Silla de Montar</name>
		<lambda>x^2-y^2</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Montañas</name>
		<lambda>sin(x)+cos(y)</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>x</argument>
			<argument>y</argument>
		</arguments>
	</function>
	<function>
		<name>Linea recta</name>
		<lambda>vector{t,t,t}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Hélice</name>
		<lambda>vector{4*sin(t),4*cos(t),t}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
	<function>
		<name>Parábola</name>
		<lambda>vector{t*t,2,t}</lambda>
		<dimension>3</dimension>
		<arguments>
			<argument>t</argument>
		</arguments>
	</function>
</kfl>


